import { Middleware, Dispatch, GetState } from './types';
export interface Delegate<S, E, R> {
    (dispatch: Dispatch<S>, getState: GetState<S>, extraArgument: E): R;
}
export interface Thunk<S, E, R> {
    (state: S): Delegate<S, E, R>;
}
declare module './types' {
    interface Dispatch<S> {
        <R, E = any>(thunk: Thunk<S, E, R>): R;
    }
}
export interface ThunkMiddleware<E> extends Middleware {
    withExtraArgument: <EA>(extraArgument: EA) => ThunkMiddleware<EA>;
}
export declare const thunk: ThunkMiddleware<{}>;
